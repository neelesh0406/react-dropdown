{"version":3,"sources":["Dropdown.js","App.js","index.js"],"names":["Dropdown","props","handleDropdownEnter","setState","showList","handleDropdownLeave","handleItemClick","item","selectedValue","state","listItems","this","className","onMouseEnter","onMouseLeave","length","map","onClick","Component","App","style","display","justifyContent","alignItems","height","background","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAGqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,oBAAsB,WAClB,EAAKC,SAAS,CACVC,UAAU,KATC,EAYnBC,oBAAsB,WAClB,EAAKF,SAAS,CACVC,UAAU,KAdC,EAkBnBE,gBAAkB,SAACC,GACf,EAAKJ,SAAS,CACVK,cAAeD,EACfH,UAAU,KAnBd,EAAKK,MAAQ,CACTD,cAAe,GACfJ,UAAU,GAJC,E,0CAwBnB,WAAU,IAAD,OACGM,EAAcC,KAAKV,MAAnBS,UACR,EAAoCC,KAAKF,MAAjCD,EAAR,EAAQA,cAAeJ,EAAvB,EAAuBA,SACvB,OACI,sBAAKQ,UAAU,WAAf,UACI,mBAAGA,UAAU,gBAAb,4CAEA,yBAAQC,aAAcF,KAAKT,oBAAqBY,aAAcH,KAAKN,oBAAnE,UAEKG,EAAcO,OAAS,EACpBP,EAEA,SAEJ,mBAAGI,UAAU,wBAEZR,GACG,qBAAKQ,UAAU,gBAAf,SACI,6BACKF,EAAUM,KAAI,SAACT,GACZ,OAAO,oBAAIU,QAAS,kBAAM,EAAKX,gBAAgBC,IAAxC,SAEFA,GADIA,oB,GA9CPW,aCWvBC,MAXf,WAGE,OACE,qBAAKP,UAAU,MAAMQ,MAAO,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,OAAQ,OAAQC,WAAY,oDAA3H,SAEE,cAAC,EAAD,CAAUf,UALI,CAAC,MAAO,sBCA5BgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.77cdd66d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Dropdown.css'\n\nexport default class Dropdown extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedValue: '',\n            showList: false\n        }\n    }\n    handleDropdownEnter = () => {\n        this.setState({\n            showList: true\n        })\n    }\n    handleDropdownLeave = () => {\n        this.setState({\n            showList: false\n        })\n    }\n    //When an item is clicked, it stores the value selected in state & hides the list\n    handleItemClick = (item) => {\n        this.setState({\n            selectedValue: item,\n            showList: false\n        })\n    }\n    render() {\n        const { listItems } = this.props;\n        const { selectedValue, showList } = this.state;\n        return (\n            <div className=\"dropdown\">\n                <p className=\"dropdown-text\">Should you choose a dropdown ?</p>\n                {/* Functions change the state when mouse enters and leaves the button */}\n                <button onMouseEnter={this.handleDropdownEnter} onMouseLeave={this.handleDropdownLeave}>\n                    {/* If a value is selected, it gets displayed here */}\n                    {selectedValue.length > 0 ?\n                        selectedValue\n                        :\n                        'Select'\n                    }\n                    <i className=\"fas fa-chevron-down\"></i>\n                    {/* When the showList is true show the list */}\n                    {showList &&\n                        <div className=\"dropdown-list\">\n                            <ul>\n                                {listItems.map((item) => {\n                                    return <li onClick={() => this.handleItemClick(item)}\n                                        key={item} >\n                                        {item}\n                                    </li>\n                                })}\n                            </ul>\n                        </div>}\n                </button>\n\n            </div>\n        )\n    }\n}\n","import './App.css';\nimport Dropdown from './Dropdown';\n\nfunction App() {\n  const listItems = ['Yes', 'Probably Not!'];\n\n  return (\n    <div className=\"App\" style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"90vh\", background: \"linear-gradient(315deg, #abe9cd 0%, #3eadcf 74%)\" }}>\n      {/* Contents of list sent through props */}\n      <Dropdown listItems={listItems} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}